{"version":3,"sources":["../src/initRuleDeclarations.js"],"names":["availableInputs","infrared","handler","initializer","prefix","initRuleDeclarations","rule","protocol","input","console","log","listener"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,kBAAkB;AACtBC,YAAU,UADY;AAEtBC,WAAS;AACPC,4CADO;AAEPC,YAAQ;AAFD;AAFa,CAAxB;;AAQA,SAASC,oBAAT,CAA+BC,IAA/B,EAAqC;AACnC,MAAMC,WAAWD,KAAKE,KAAL,CAAWD,QAA5B;AACAE,UAAQC,GAAR,CAAYH,QAAZ;AACA,MAAIP,gBAAgBO,QAAhB,MAA8BA,QAAlC,EAA4C;AAC1CE,YAAQC,GAAR,eAAwBH,QAAxB;AACA,QAAMI,WAAWX,gBAAgBE,OAAhB,CAAwBC,WAAzC;AACAQ,aAASX,gBAAgBE,OAAhB,CAAwBE,MAAjC;AACD;AACF;;kBAEcC,oB","file":"initRuleDeclarations.js","sourcesContent":["import startSocketServer from './startSocketServer'\r\n\r\nconst availableInputs = {\r\n  infrared: 'infrared',\r\n  handler: {\r\n    initializer: startSocketServer,\r\n    prefix: 'IR_'\r\n  }\r\n}\r\n\r\nfunction initRuleDeclarations (rule) {\r\n  const protocol = rule.input.protocol\r\n  console.log(protocol)\r\n  if (availableInputs[protocol] === protocol) {\r\n    console.log(`Starting ${protocol} listener`)\r\n    const listener = availableInputs.handler.initializer\r\n    listener(availableInputs.handler.prefix)\r\n  }\r\n}\r\n\r\nexport default initRuleDeclarations\r\n"]}
{"version":3,"sources":["../../../src/the_island/dashboard/Dashboard.js"],"names":["Dashboard","state","message","history","actions","handleClick","bind","socket","on","setState","data","actionsRef","database","ref","action","name","snapshot","val","command","id","key","concat","e","preventDefault","emit"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,S;;;AACJ,uBAAe;AAAA;;AAAA;;AAEb,UAAKC,KAAL,GAAa;AACXC,eAAS,SADE;AAEXC,eAAS,EAFE;AAGXC,eAAS;AAHE,KAAb;AAKA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,MAAL,GAAc,sBAAO,uBAAP,CAAd;AACA,UAAKA,MAAL,CAAYC,EAAZ,CAAe,KAAf,EAAsB;AAAA,aAAQ,MAAKC,QAAL,CAAc,EAAEN,sCAAa,MAAKF,KAAL,CAAWE,OAAxB,IAAiCO,IAAjC,EAAF,EAAd,CAAR;AAAA,KAAtB;AACA,UAAKH,MAAL,CAAYC,EAAZ,CAAe,WAAf,EAA4B;AAAA,aAAQ,MAAKC,QAAL,CAAc,EAAEP,SAASQ,IAAX,EAAd,CAAR;AAAA,KAA5B;AAVa;AAWd;;;;yCAEqB;AAAA;;AACpB,WAAKD,QAAL,CAAc,EAAEP,SAAS,SAAX,EAAd;AACA,UAAIS,aAAa,8BAAKC,QAAL,GAAgBC,GAAhB,CAAoB,SAApB,CAAjB;AACAF,iBAAWH,EAAX,CAAc,aAAd,EAA6B,oBAAY;AACvC,YAAIM,SAAS,EAAEC,MAAMC,SAASC,GAAT,EAAR,EAAwBC,SAASF,SAASC,GAAT,EAAjC,EAAiDE,IAAIH,SAASI,GAA9D,EAAb;AACA,eAAKX,QAAL,CAAc,EAAEL,SAAS,CAACU,MAAD,EAASO,MAAT,CAAgB,OAAKpB,KAAL,CAAWG,OAA3B,CAAX,EAAd;AACD,OAHD;AAID;;;gCAEYM,I,EAAMY,C,EAAG;AACpBA,QAAEC,cAAF;AACA,WAAKhB,MAAL,CAAYiB,IAAZ,CAAiB,KAAjB,EAAwBd,IAAxB;AACD;;;6BAES;AACR,aACE;AAAA;AAAA;AACE,0DAAQ,SAAS,KAAKT,KAAL,CAAWC,OAA5B,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAK,WAAU,KAAf;AACE;AAAA;AAAA,gBAAK,WAAU,OAAf;AACE;AACE,yBAAS,KAAKD,KAAL,CAAWG,OADtB;AAEE,yBAAS,KAAKC,WAFhB;AADF,aADF;AAME;AAAA;AAAA,gBAAK,WAAU,OAAf;AACE,iEAAS,SAAS,KAAKJ,KAAL,CAAWE,OAA7B;AADF;AANF;AADF;AAFF,OADF;AAiBD;;;;;;kBAGYH,S","file":"Dashboard.js","sourcesContent":["import React, { Component } from 'react'\r\nimport client from 'socket.io-client'\r\nimport fire from '../../the_conch/firebaseInitializer'\r\nimport History from './History'\r\nimport Buttons from './Buttons'\r\nimport Header from './Header'\r\n\r\nclass Dashboard extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      message: ' awakes',\r\n      history: [],\r\n      actions: []\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n    this.socket = client('http://localhost:3010')\r\n    this.socket.on('IR_', data => this.setState({ history: [...this.state.history, data] }))\r\n    this.socket.on('tcMessage', data => this.setState({ message: data }))\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.setState({ message: ' awaits' })\r\n    let actionsRef = fire.database().ref('actions')\r\n    actionsRef.on('child_added', snapshot => {\r\n      let action = { name: snapshot.val(), command: snapshot.val(), id: snapshot.key }\r\n      this.setState({ actions: [action].concat(this.state.actions) })\r\n    })\r\n  }\r\n\r\n  handleClick (data, e) {\r\n    e.preventDefault()\r\n    this.socket.emit('IR_', data)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Header message={this.state.message} />\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-5'>\r\n              <Buttons\r\n                actions={this.state.actions}\r\n                handler={this.handleClick} />\r\n            </div>\r\n            <div className='col-7'>\r\n              <History history={this.state.history} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n"]}